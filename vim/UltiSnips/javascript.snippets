snippet classCmpt
// @flow
import * as React from 'react';

type Props = {};
type State = {};

export default class ${1:ClassName} extends React.Component<Props, State> {
	state = {};

	render() {
		return (
			<pre>{ JSON.stringify(this.props, null, 2) }</pre>
		);
	}
}
endsnippet

snippet buildQuery
import { gql } from 'apollo-boost';

export default gql`
$1
`;
endsnippet

snippet fnCmpt
// @flow
import * as React from 'react';

type Props = {};

const ${1:ClassName} = props => (
	<pre>{JSON.stringify(props, null, 2)}</pre>
);

export default $1;
endsnippet

snippet import
import ${1:Name} from '${2:where}/$1';
endsnippet

snippet test
/* eslint-disable */
import React from 'react';
import { render } from 'react-testing-library';
import ${1:ComponentName} from '@${2:components}/$1';

describe('$1 renders', () => {
	it('without props', () => {
		const { container } = render(<$1 />);
		expect(container.firstChild).toMatchSnapshot();
	});
});
endsnippet
